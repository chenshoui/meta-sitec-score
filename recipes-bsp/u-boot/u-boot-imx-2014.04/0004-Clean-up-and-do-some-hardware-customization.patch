From f07cad2fc0b2b915ab0cd7e2dae33cb695282da7 Mon Sep 17 00:00:00 2001
From: Robert Lehmann <robert.lehmann@sitec-systems.de>
Date: Mon, 30 Nov 2015 15:17:14 +0100
Subject: [PATCH 3/3] Clean up and do some hardware customization

Remove setup and pinmuxing for unused components like both ethernet
ports, uart2 and uart6, i2c2, quadspi and sd2. Althoug fix the boot
from sd3 and add the initialisation for the both leds on the prozessor.
---
 board/freescale/mx6sxscore/mx6sxscore.c | 271 ++++++--------------------------
 1 file changed, 46 insertions(+), 225 deletions(-)

diff --git a/board/freescale/mx6sxscore/mx6sxscore.c b/board/freescale/mx6sxscore/mx6sxscore.c
index ea35035..9b5e20f 100644
--- a/board/freescale/mx6sxscore/mx6sxscore.c
+++ b/board/freescale/mx6sxscore/mx6sxscore.c
@@ -39,16 +39,6 @@ DECLARE_GLOBAL_DATA_PTR;
         PAD_CTL_PUS_22K_UP  | PAD_CTL_SPEED_LOW |		\
         PAD_CTL_DSE_80ohm   | PAD_CTL_SRE_FAST  | PAD_CTL_HYS)
 
-#define ENET_PAD_CTRL  (PAD_CTL_PUS_100K_UP | PAD_CTL_PUE |     \
-        PAD_CTL_SPEED_HIGH   |                                   \
-        PAD_CTL_DSE_48ohm   | PAD_CTL_SRE_FAST)
-
-#define ENET_CLK_PAD_CTRL  (PAD_CTL_SPEED_MED | \
-        PAD_CTL_DSE_120ohm   | PAD_CTL_SRE_FAST)
-
-#define ENET_RX_PAD_CTRL  (PAD_CTL_PKE | PAD_CTL_PUE |          \
-        PAD_CTL_SPEED_HIGH   | PAD_CTL_SRE_FAST)
-
 #define I2C_PAD_CTRL    (PAD_CTL_PKE | PAD_CTL_PUE |            \
         PAD_CTL_PUS_100K_UP | PAD_CTL_SPEED_MED |               \
         PAD_CTL_DSE_40ohm | PAD_CTL_HYS |			\
@@ -66,36 +56,23 @@ DECLARE_GLOBAL_DATA_PTR;
 #define GPMI_PAD_CTRL0 (PAD_CTL_PKE | PAD_CTL_PUE | PAD_CTL_PUS_100K_UP)
 #define GPMI_PAD_CTRL1 (PAD_CTL_DSE_40ohm | PAD_CTL_SPEED_MED | \
         PAD_CTL_SRE_FAST)
+#define GPIO_PAD_CTRL (PAD_CTL_PUS_100K_UP | PAD_CTL_PUE)
 #define GPMI_PAD_CTRL2 (GPMI_PAD_CTRL0 | GPMI_PAD_CTRL1)
 
 #ifdef CONFIG_SYS_I2C_MXC
 #define PC MUX_PAD_CTRL(I2C_PAD_CTRL)
 /* I2C4 for PMIC */
-struct i2c_pads_info i2c_pad_info4 = {
-    .scl = {
-        .i2c_mode = MX6SX_PAD_USB_H_STROBE__I2C4_SCL | PC,
-        .gpio_mode = MX6SX_PAD_USB_H_STROBE__GPIO7_IO_11 | PC,
-        .gp = IMX_GPIO_NR(7, 11),
-    },
-    .sda = {
-        .i2c_mode = MX6SX_PAD_USB_H_DATA__I2C4_SDA | PC,
-        .gpio_mode = MX6SX_PAD_USB_H_DATA__GPIO7_IO_10 | PC,
-        .gp = IMX_GPIO_NR(1, 10),
-    },
-};
-
-/* I2C2 */
-struct i2c_pads_info i2c_pad_info2 = {
-    .scl = {
-        .i2c_mode = MX6SX_PAD_GPIO1_IO02__I2C2_SCL | PC,
-        .gpio_mode = MX6SX_PAD_GPIO1_IO02__GPIO1_IO_2 | PC,
-        .gp = IMX_GPIO_NR(1, 2),
-    },
-    .sda = {
-        .i2c_mode = MX6SX_PAD_GPIO1_IO03__I2C2_SDA | PC,
-        .gpio_mode = MX6SX_PAD_GPIO1_IO03__GPIO1_IO_3 | PC,
-        .gp = IMX_GPIO_NR(1, 3),
-    },
+struct i2c_pads_info i2c_pad_info1 = {
+	.scl = {
+		.i2c_mode = MX6SX_PAD_GPIO1_IO00__I2C1_SCL | PC,
+		.gpio_mode = MX6SX_PAD_GPIO1_IO00__GPIO1_IO_0 | PC,
+		.gp = IMX_GPIO_NR(1, 0),
+	},
+	.sda = {
+		.i2c_mode = MX6SX_PAD_GPIO1_IO01__I2C1_SDA | PC,
+		.gpio_mode = MX6SX_PAD_GPIO1_IO01__GPIO1_IO_1 | PC,
+		.gp = IMX_GPIO_NR(1, 1),
+	},
 };
 #endif
 
@@ -111,172 +88,12 @@ static iomux_v3_cfg_t const uart1_pads[] = {
     MX6SX_PAD_GPIO1_IO05__UART1_RX | MUX_PAD_CTRL(UART_PAD_CTRL),
 };
 
-static iomux_v3_cfg_t const uart2_pads[] = {
-    MX6SX_PAD_GPIO1_IO06__UART2_TX | MUX_PAD_CTRL(UART_PAD_CTRL),
-    MX6SX_PAD_GPIO1_IO07__UART2_RX | MUX_PAD_CTRL(UART_PAD_CTRL),
-};
-
-static iomux_v3_cfg_t const uart6_pads[] = {
-    MX6SX_PAD_KEY_ROW1__UART6_RX | MUX_PAD_CTRL(UART_PAD_CTRL),
-    MX6SX_PAD_KEY_COL1__UART6_TX | MUX_PAD_CTRL(UART_PAD_CTRL),
-};
-
 static void setup_iomux_uart(void)
 {
     imx_iomux_v3_setup_multiple_pads(uart1_pads, ARRAY_SIZE(uart1_pads));
-    imx_iomux_v3_setup_multiple_pads(uart2_pads, ARRAY_SIZE(uart2_pads));
-    imx_iomux_v3_setup_multiple_pads(uart6_pads, ARRAY_SIZE(uart6_pads));
-}
-
-#ifdef CONFIG_FEC_MXC
-// 1 Gbit/s interface
-static iomux_v3_cfg_t const fec1_pads[] = {
-    MX6SX_PAD_ENET1_MDC__ENET1_MDC | MUX_PAD_CTRL(ENET_PAD_CTRL),
-    MX6SX_PAD_ENET1_MDIO__ENET1_MDIO | MUX_PAD_CTRL(ENET_PAD_CTRL),
-    MX6SX_PAD_RGMII1_RX_CTL__ENET1_RX_EN | MUX_PAD_CTRL(ENET_RX_PAD_CTRL),
-    MX6SX_PAD_RGMII1_RD0__ENET1_RX_DATA_0 | MUX_PAD_CTRL(ENET_RX_PAD_CTRL),
-    MX6SX_PAD_RGMII1_RD1__ENET1_RX_DATA_1 | MUX_PAD_CTRL(ENET_RX_PAD_CTRL),
-    MX6SX_PAD_RGMII1_RD2__ENET1_RX_DATA_2 | MUX_PAD_CTRL(ENET_RX_PAD_CTRL),
-    MX6SX_PAD_RGMII1_RD3__ENET1_RX_DATA_3 | MUX_PAD_CTRL(ENET_RX_PAD_CTRL),
-    MX6SX_PAD_RGMII1_RXC__ENET1_RX_CLK | MUX_PAD_CTRL(ENET_RX_PAD_CTRL),
-    MX6SX_PAD_RGMII1_TX_CTL__ENET1_TX_EN | MUX_PAD_CTRL(ENET_PAD_CTRL),
-    MX6SX_PAD_RGMII1_TD0__ENET1_TX_DATA_0 | MUX_PAD_CTRL(ENET_PAD_CTRL),
-    MX6SX_PAD_RGMII1_TD1__ENET1_TX_DATA_1 | MUX_PAD_CTRL(ENET_PAD_CTRL),
-    MX6SX_PAD_RGMII1_TD2__ENET1_TX_DATA_2 | MUX_PAD_CTRL(ENET_PAD_CTRL),
-    MX6SX_PAD_RGMII1_TD3__ENET1_TX_DATA_3 | MUX_PAD_CTRL(ENET_PAD_CTRL),
-    MX6SX_PAD_RGMII1_TXC__ENET1_RGMII_TXC | MUX_PAD_CTRL(ENET_PAD_CTRL),
-    MX6SX_PAD_ENET1_COL__ENET1_COL | MUX_PAD_CTRL(ENET_PAD_CTRL),
-    MX6SX_PAD_ENET1_TX_CLK__ENET1_TX_CLK | MUX_PAD_CTRL(ENET_CLK_PAD_CTRL),
-    MX6SX_PAD_ENET1_RX_CLK__ENET1_RX_CLK | MUX_PAD_CTRL(ENET_RX_PAD_CTRL),
-};
-
-// 100 Mbit interface
-static iomux_v3_cfg_t const fec2_pads[] = {
-    /* MX6SX_PAD_RGMII2_RX_CTL__ENET2_RX_EN | MUX_PAD_CTRL(ENET_RX_PAD_CTRL), */
-    MX6SX_PAD_RGMII2_RD0__ENET2_RX_DATA_0 | MUX_PAD_CTRL(ENET_RX_PAD_CTRL),
-    MX6SX_PAD_RGMII2_RD1__ENET2_RX_DATA_1 | MUX_PAD_CTRL(ENET_RX_PAD_CTRL),
-    MX6SX_PAD_RGMII2_TX_CTL__ENET2_TX_EN | MUX_PAD_CTRL(ENET_PAD_CTRL),
-    MX6SX_PAD_RGMII2_TD0__ENET2_TX_DATA_0 | MUX_PAD_CTRL(ENET_PAD_CTRL),
-    MX6SX_PAD_RGMII2_TD1__ENET2_TX_DATA_1 | MUX_PAD_CTRL(ENET_PAD_CTRL),
-    MX6SX_PAD_ENET2_CRS__ENET2_CRS | MUX_PAD_CTRL(ENET_PAD_CTRL),
-    MX6SX_PAD_ENET2_TX_CLK__ENET2_TX_CLK | MUX_PAD_CTRL(ENET_CLK_PAD_CTRL),
-};
-
-static iomux_v3_cfg_t const phy_control_pads[] = {
-    /* AR8031 PHY Reset. */
-    MX6SX_PAD_QSPI1B_DATA2__GPIO4_IO_26 | MUX_PAD_CTRL(NO_PAD_CTRL),
-};
-
-static void setup_iomux_fec(int fec_id)
-{
-    if (0 == fec_id)
-        imx_iomux_v3_setup_multiple_pads(fec1_pads, ARRAY_SIZE(fec1_pads));
-    else
-        imx_iomux_v3_setup_multiple_pads(fec2_pads, ARRAY_SIZE(fec2_pads));
 }
 
-int board_eth_init(bd_t *bis)
-{
-    int ret;
-
-    setup_iomux_fec(CONFIG_FEC_ENET_DEV);
-
-    ret = fecmxc_initialize_multi(bis, CONFIG_FEC_ENET_DEV,
-            CONFIG_FEC_MXC_PHYADDR, IMX_FEC_BASE);
-    if (ret)
-        printf("FEC%d MXC: %s:failed\n", CONFIG_FEC_ENET_DEV, __func__);
-
-    return 0;
-}
-
-// TODO Not the right configuration
-static int setup_fec(int fec_id)
-{
-    struct iomuxc_gpr_base_regs *const iomuxc_gpr_regs
-        = (struct iomuxc_gpr_base_regs *) IOMUXC_GPR_BASE_ADDR;
-    int ret;
-
-    if (0 == fec_id)
-        /* Use 125M anatop loopback REF_CLK1 for ENET1, clear gpr1[13], gpr1[17]*/
-        clrsetbits_le32(&iomuxc_gpr_regs->gpr[1], IOMUX_GPR1_FEC1_MASK, 0);
-    else
-        /* Use 125M anatop loopback REF_CLK1 for ENET2, clear gpr1[14], gpr1[18]*/
-        clrsetbits_le32(&iomuxc_gpr_regs->gpr[1], IOMUX_GPR1_FEC2_MASK, 0);
-
-    imx_iomux_v3_setup_multiple_pads(phy_control_pads,
-            ARRAY_SIZE(phy_control_pads));
-
-    /* Enable the ENET power, active low */
-    gpio_direction_output(IMX_GPIO_NR(2, 6) , 0);
-
-    /* Reset AR8031 PHY */
-    gpio_direction_output(IMX_GPIO_NR(2, 7) , 0);
-    udelay(500);
-    gpio_set_value(IMX_GPIO_NR(2, 7), 1);
-
-    ret = enable_fec_anatop_clock(fec_id, ENET_125MHz);
-    if (ret)
-        return ret;
-
-    enable_enet_clock();
-
-    return 0;
-}
-
-// TODO: Not the write configuration
-int board_phy_config(struct phy_device *phydev)
-{
-    /* Enable 1.8V(SEL_1P5_1P8_POS_REG) on
-       Phy control debug reg 0 */
-    phy_write(phydev, MDIO_DEVAD_NONE, 0x1d, 0x1f);
-    phy_write(phydev, MDIO_DEVAD_NONE, 0x1e, 0x8);
-
-    /* rgmii tx clock delay enable */
-    phy_write(phydev, MDIO_DEVAD_NONE, 0x1d, 0x05);
-    phy_write(phydev, MDIO_DEVAD_NONE, 0x1e, 0x100);
-
-    if (phydev->drv->config)
-        phydev->drv->config(phydev);
-
-    return 0;
-}
-#endif // CONFIG_FEC_MXC
-
-#ifdef CONFIG_QSPI
-
-#define QSPI_PAD_CTRL1	\
-    (PAD_CTL_SRE_FAST | PAD_CTL_SPEED_MED | \
-     PAD_CTL_PKE | PAD_CTL_PUE | PAD_CTL_PUS_47K_UP | PAD_CTL_DSE_60ohm)
-
-static iomux_v3_cfg_t const quadspi_pads[] = {
-    MX6SX_PAD_NAND_WP_B__QSPI2_A_DATA_0		| MUX_PAD_CTRL(QSPI_PAD_CTRL1),
-    MX6SX_PAD_NAND_READY_B__QSPI2_A_DATA_1	| MUX_PAD_CTRL(QSPI_PAD_CTRL1),
-    MX6SX_PAD_NAND_CE0_B__QSPI2_A_DATA_2	| MUX_PAD_CTRL(QSPI_PAD_CTRL1),
-    MX6SX_PAD_NAND_CE1_B__QSPI2_A_DATA_3	| MUX_PAD_CTRL(QSPI_PAD_CTRL1),
-    MX6SX_PAD_NAND_ALE__QSPI2_A_SS0_B		| MUX_PAD_CTRL(QSPI_PAD_CTRL1),
-    MX6SX_PAD_NAND_CLE__QSPI2_A_SCLK		| MUX_PAD_CTRL(QSPI_PAD_CTRL1),
-    MX6SX_PAD_NAND_DATA07__QSPI2_A_DQS		| MUX_PAD_CTRL(QSPI_PAD_CTRL1),
-    MX6SX_PAD_NAND_DATA01__QSPI2_B_DATA_0	| MUX_PAD_CTRL(QSPI_PAD_CTRL1),
-    MX6SX_PAD_NAND_DATA00__QSPI2_B_DATA_1	| MUX_PAD_CTRL(QSPI_PAD_CTRL1),
-    MX6SX_PAD_NAND_WE_B__QSPI2_B_DATA_2		| MUX_PAD_CTRL(QSPI_PAD_CTRL1),
-    MX6SX_PAD_NAND_RE_B__QSPI2_B_DATA_3		| MUX_PAD_CTRL(QSPI_PAD_CTRL1),
-    MX6SX_PAD_NAND_DATA03__QSPI2_B_SS0_B	| MUX_PAD_CTRL(QSPI_PAD_CTRL1),
-    MX6SX_PAD_NAND_DATA02__QSPI2_B_SCLK		| MUX_PAD_CTRL(QSPI_PAD_CTRL1),
-    MX6SX_PAD_NAND_DATA05__QSPI2_B_DQS		| MUX_PAD_CTRL(QSPI_PAD_CTRL1),
-};
-
-int board_qspi_init(void)
-{
-    /* Set the iomux */
-    imx_iomux_v3_setup_multiple_pads(quadspi_pads, ARRAY_SIZE(quadspi_pads));
-
-    /* Set the clock */
-    enable_qspi_clk(1);
-
-    return 0;
-}
-#endif
-
+#if 0
 #ifdef CONFIG_SYS_USE_NAND
 static iomux_v3_cfg_t gpmi_pads[] = {
     MX6SX_PAD_NAND_CLE__RAWNAND_CLE		| MUX_PAD_CTRL(GPMI_PAD_CTRL2),
@@ -329,17 +146,9 @@ static void setup_gpmi_nand(void)
     setbits_le32(&mxc_ccm->CCGR0, MXC_CCM_CCGR0_APBHDMA_MASK);
 }
 #endif // CONFIG_NAND_MXS
+#endif // IF 0
 
 #ifdef CONFIG_FSL_ESDHC
-static iomux_v3_cfg_t const usdhc2_pads[] = {
-    MX6SX_PAD_SD2_CLK__USDHC2_CLK | MUX_PAD_CTRL(USDHC_PAD_CTRL),
-    MX6SX_PAD_SD2_CMD__USDHC2_CMD | MUX_PAD_CTRL(USDHC_PAD_CTRL),
-    MX6SX_PAD_SD2_DATA0__USDHC2_DATA0 | MUX_PAD_CTRL(USDHC_PAD_CTRL),
-    MX6SX_PAD_SD2_DATA1__USDHC2_DATA1 | MUX_PAD_CTRL(USDHC_PAD_CTRL),
-    MX6SX_PAD_SD2_DATA2__USDHC2_DATA2 | MUX_PAD_CTRL(USDHC_PAD_CTRL),
-    MX6SX_PAD_SD2_DATA3__USDHC2_DATA3 | MUX_PAD_CTRL(USDHC_PAD_CTRL),
-};
-
 static iomux_v3_cfg_t const usdhc3_pads[] = {
     MX6SX_PAD_SD3_CLK__USDHC3_CLK | MUX_PAD_CTRL(USDHC_PAD_CTRL),
     MX6SX_PAD_SD3_CMD__USDHC3_CMD | MUX_PAD_CTRL(USDHC_PAD_CTRL),
@@ -349,19 +158,18 @@ static iomux_v3_cfg_t const usdhc3_pads[] = {
     MX6SX_PAD_SD3_DATA3__USDHC3_DATA3 | MUX_PAD_CTRL(USDHC_PAD_CTRL),
 
     // CD pin
-    MX6SX_PAD_SD3_DATA5__GPIO7_IO_7 | MUX_PAD_CTRL(NO_PAD_CTRL),
+    MX6SX_PAD_SD3_DATA4__GPIO7_IO_6 | MUX_PAD_CTRL(NO_PAD_CTRL),
 
     // WP pin
-    MX6SX_PAD_SD3_DATA4__GPIO7_IO_6 | MUX_PAD_CTRL(NO_PAD_CTRL),
+    MX6SX_PAD_SD3_DATA5__GPIO7_IO_7 | MUX_PAD_CTRL(NO_PAD_CTRL),
 };
 
 static struct fsl_esdhc_cfg usdhc_cfg[2] = {
     {USDHC3_BASE_ADDR, 0, 4},
-    {USDHC4_BASE_ADDR, 0, 4},
 };
 
-#define USDHC3_CD_GPIO	IMX_GPIO_NR(7, 7)
-#define USDHC3_WP_GPIO	IMX_GPIO_NR(7, 6)
+#define USDHC3_CD_GPIO	IMX_GPIO_NR(7, 6)
+#define USDHC3_WP_GPIO	IMX_GPIO_NR(7, 7)
 
 int mmc_get_env_devno(void)
 {
@@ -402,7 +210,8 @@ int board_mmc_getcd(struct mmc *mmc)
             ret = 1; /* Assume uSDHC2 is always present */
             break;
         case USDHC3_BASE_ADDR:
-            ret = !gpio_get_value(USDHC3_CD_GPIO);
+            /*ret = !gpio_get_value(USDHC3_CD_GPIO);*/
+            ret = 1;
             break;
     }
 
@@ -417,18 +226,12 @@ int board_mmc_init(bd_t *bis)
     /*
      * According to the board_mmc_init() the following map is done:
      * (U-boot device node)    (Physical Port)
-     * mmc0                    USDHC2
-     * mmc1                    USDHC3
+     * mmc0                    USDHC3
      */
     for (i = 0; i < CONFIG_SYS_FSL_USDHC_NUM; i++) {
         switch (i) {
             case 0:
                 imx_iomux_v3_setup_multiple_pads(
-                        usdhc2_pads, ARRAY_SIZE(usdhc2_pads));
-                usdhc_cfg[1].sdhc_clk = mxc_get_clock(MXC_ESDHC2_CLK);
-                break;
-            case 1:
-                imx_iomux_v3_setup_multiple_pads(
                         usdhc3_pads, ARRAY_SIZE(usdhc3_pads));
                 gpio_direction_input(USDHC3_CD_GPIO);
                 usdhc_cfg[0].sdhc_clk = mxc_get_clock(MXC_ESDHC3_CLK);
@@ -479,6 +282,18 @@ void board_late_mmc_init(void)
 }
 #endif //CONFIG_FSL_ESDHC
 
+static iomux_v3_cfg_t const gpio_pads[] = {
+    MX6SX_PAD_LCD1_DATA18__GPIO3_IO_19 | MUX_PAD_CTRL(NO_PAD_CTRL),
+    MX6SX_PAD_LCD1_DATA19__GPIO3_IO_20 | MUX_PAD_CTRL(NO_PAD_CTRL),
+};
+
+static void setup_gpio(void)
+{
+    imx_iomux_v3_setup_multiple_pads(gpio_pads, ARRAY_SIZE(gpio_pads));
+
+    gpio_direction_output(IMX_GPIO_NR(3, 20), 1);
+}
+
 #ifdef CONFIG_PFUZE100_PMIC_I2C
 #define PFUZE100_DEVICEID	0x0
 #define PFUZE100_REVID		0x3
@@ -621,6 +436,7 @@ void ldo_mode_set(int ldo_bypass)
     unsigned char value;
     int is_400M;
     u32 vddarm;
+
     /* switch to ldo_bypass mode */
     if (ldo_bypass) {
         prep_anatop_bypass();
@@ -680,6 +496,12 @@ void ldo_mode_set(int ldo_bypass)
     }
 }
 #endif
+#else
+#ifdef CONFIG_LDO_BYPASS_CHECK
+void ldo_mode_set(int ldo_bypass)
+{
+}
+#endif
 #endif
 
 int board_early_init_f(void)
@@ -694,17 +516,16 @@ int board_init(void)
     gd->bd->bi_boot_params = PHYS_SDRAM + 0x100;
 
 #ifdef CONFIG_SYS_I2C_MXC
-    setup_i2c(1, CONFIG_SYS_I2C_SPEED, 0x7f, &i2c_pad_info2);
-    setup_i2c(3, CONFIG_SYS_I2C_SPEED, 0x7f, &i2c_pad_info4);
-#endif
-
-#ifdef	CONFIG_FEC_MXC
-    setup_fec(CONFIG_FEC_ENET_DEV);
+	setup_i2c(0, CONFIG_SYS_I2C_SPEED, 0x7f, &i2c_pad_info1);
 #endif
 
+#if 0
 #ifdef CONFIG_SYS_USE_NAND
     setup_gpmi_nand();
 #endif
+#endif
+
+    setup_gpio();
     return 0;
 }
 
@@ -757,7 +578,7 @@ iomux_v3_cfg_t const usb_otg1_pads[] = {
 };
 
 iomux_v3_cfg_t const usb_otg2_pads[] = {
-    MX6SX_PAD_GPIO1_IO12__USB_OTG2_PWR | MUX_PAD_CTRL(NO_PAD_CTRL),
+    /*MX6SX_PAD_GPIO1_IO12__USB_OTG2_PWR | MUX_PAD_CTRL(NO_PAD_CTRL),*/
 };
 
 int board_ehci_hcd_init(int port)
-- 
1.9.1


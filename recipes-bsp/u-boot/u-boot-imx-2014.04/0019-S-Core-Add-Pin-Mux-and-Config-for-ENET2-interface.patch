From 39063234a5f53d7fb8b7b55f83d90a059f2e265d Mon Sep 17 00:00:00 2001
From: Robert Lehmann <robert.lehmann@sitec-systems.de>
Date: Mon, 8 Feb 2016 11:48:36 +0100
Subject: [PATCH 19/19] S Core: Add Pin-Mux and Config for ENET2 interface

Add the configuration for the ENET2 (100 Mbit/s) interface to the
intialisation of the board. This is needed to use the 100 Mbit/s
interface of the S Core evaluation board. Because of hardware issues
there is no possibility to test the implementation.

Ticket #931
---
 board/freescale/mx6sxscore/mx6sxscore.c | 77 +++++++++++++++++++++++++++++++++
 1 file changed, 77 insertions(+)

diff --git a/board/freescale/mx6sxscore/mx6sxscore.c b/board/freescale/mx6sxscore/mx6sxscore.c
index ae48cc6..64a9405 100644
--- a/board/freescale/mx6sxscore/mx6sxscore.c
+++ b/board/freescale/mx6sxscore/mx6sxscore.c
@@ -51,6 +51,16 @@ DECLARE_GLOBAL_DATA_PTR;
         PAD_CTL_DSE_40ohm | PAD_CTL_HYS |			\
         PAD_CTL_ODE)
 
+#define ENET_PAD_CTRL  (PAD_CTL_PUS_100K_UP | PAD_CTL_PUE |     \
+	PAD_CTL_SPEED_HIGH   |                                   \
+	PAD_CTL_DSE_48ohm   | PAD_CTL_SRE_FAST)
+
+#define ENET_CLK_PAD_CTRL  (PAD_CTL_SPEED_MED | \
+	PAD_CTL_DSE_120ohm   | PAD_CTL_SRE_FAST)
+
+#define ENET_RX_PAD_CTRL  (PAD_CTL_PKE | PAD_CTL_PUE |          \
+	PAD_CTL_SPEED_HIGH   | PAD_CTL_SRE_FAST)
+
 #define SPI_PAD_CTRL (PAD_CTL_HYS |				\
 	PAD_CTL_SPEED_MED |		\
 	PAD_CTL_DSE_40ohm | PAD_CTL_SRE_FAST)
@@ -147,6 +157,69 @@ static void setup_gpmi_nand(void)
 }
 /*#endif // CONFIG_NAND_MXS*/
 
+#ifdef CONFIG_FEC_MXC
+static iomux_v3_cfg_t const fec_pads[] = {
+    MX6SX_PAD_ENET1_MDC__ENET1_MDC | MUX_PAD_CTRL(ENET_PAD_CTRL),
+    MX6SX_PAD_ENET1_MDIO__ENET1_MDIO | MUX_PAD_CTRL(ENET_PAD_CTRL),
+    MX6SX_PAD_RGMII2_RD0__ENET2_RX_DATA_0 | MUX_PAD_CTRL(ENET_RX_PAD_CTRL),
+    MX6SX_PAD_RGMII2_RD1__ENET2_RX_DATA_1 | MUX_PAD_CTRL(ENET_RX_PAD_CTRL),
+    MX6SX_PAD_RGMII2_TD0__ENET2_TX_DATA_0 | MUX_PAD_CTRL(ENET_PAD_CTRL),
+    MX6SX_PAD_RGMII2_TD1__ENET2_TX_DATA_1 | MUX_PAD_CTRL(ENET_PAD_CTRL),
+    MX6SX_PAD_RGMII2_TX_CTL__ENET2_TX_EN | MUX_PAD_CTRL(ENET_PAD_CTRL),
+    MX6SX_PAD_RGMII2_RX_CTL__ENET2_RX_EN | MUX_PAD_CTRL(ENET_PAD_CTRL),
+    MX6SX_PAD_ENET2_CRS__ENET2_CRS | MUX_PAD_CTRL(ENET_PAD_CTRL),
+    MX6SX_PAD_ENET2_TX_CLK__ENET2_REF_CLK2 | MUX_PAD_CTRL(ENET_CLK_PAD_CTRL),
+};
+
+static iomux_v3_cfg_t const phy_ctrl_pads[] = {
+    MX6SX_PAD_QSPI1B_DATA2__GPIO4_IO_26 | MUX_PAD_CTRL(NO_PAD_CTRL),
+};
+
+int board_eth_init(bd_t *bis)
+{
+    int ret;
+
+    imx_iomux_v3_setup_multiple_pads(fec_pads, ARRAY_SIZE(fec_pads));
+
+    ret = fecmxc_initialize_multi(bis, 1, CONFIG_FEC_MXC_PHYADDR, IMX_FEC_BASE);
+    if (ret)
+        printf("FEC%d, MXC: %s: failed\n", 1, __func__);
+
+    return 0;
+}
+
+static int setup_fec(void)
+{
+	struct iomuxc_gpr_base_regs *const iomuxc_gpr_regs
+		= (struct iomuxc_gpr_base_regs *) IOMUXC_GPR_BASE_ADDR;
+
+    /* Use external OSC for ENET2 REF_CLK, set gpr1[14], clear gpr1[18]*/
+    clrsetbits_le32(&iomuxc_gpr_regs->gpr[1], 0, IOMUX_GPR1_FEC2_MASK);
+
+    imx_iomux_v3_setup_multiple_pads(phy_ctrl_pads, ARRAY_SIZE(phy_ctrl_pads));
+
+    gpio_direction_output(IMX_GPIO_NR(4, 26), 0);
+    udelay(300);
+    gpio_set_value(IMX_GPIO_NR(4, 26), 1);
+
+    return 0;
+}
+
+int board_phy_config(struct phy_device *phydev)
+{
+    int ret;
+    ret = phy_read(phydev, MDIO_DEVAD_NONE, 0x1);
+
+    printf("DBG: readed Basic State 0x%x\n", ret);
+
+	if (phydev->drv->config)
+		phydev->drv->config(phydev);
+
+    return 0;
+}
+#endif // CONFIG_FEC_MXC
+
+
 #ifdef CONFIG_FSL_ESDHC
 static iomux_v3_cfg_t const usdhc3_pads[] = {
     MX6SX_PAD_SD3_CLK__USDHC3_CLK | MUX_PAD_CTRL(USDHC_PAD_CTRL),
@@ -576,6 +649,10 @@ int board_init(void)
     printf("Hello World from SD Card\n");
 #endif
 
+#ifdef CONFIG_FEC_MXC
+    setup_fec();
+#endif
+
 #ifdef CONFIG_SITEC_S2
     printf("Hello World from S2\n");
 #else
-- 
1.9.1


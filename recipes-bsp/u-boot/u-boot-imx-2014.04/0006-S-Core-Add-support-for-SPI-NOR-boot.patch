From 5e63307c7ec016a2b1d7dc496903afc17b130f03 Mon Sep 17 00:00:00 2001
From: Robert Lehmann <robert.lehmann@sitec-systems.de>
Date: Thu, 17 Dec 2015 14:48:14 +0100
Subject: [PATCH 6/7] S Core: Add support for SPI-NOR boot

The SPI interface of the SPI-NOR-Flash will be initialized at boot up.
Although the bootmode for SPI-NOR boot is added to the bootmode struct.
So the boot over SPI can be tested.

Ticket #845
---
 board/freescale/mx6sxscore/mx6sxscore.c | 52 ++++++++++++++++++++-------------
 1 file changed, 31 insertions(+), 21 deletions(-)

diff --git a/board/freescale/mx6sxscore/mx6sxscore.c b/board/freescale/mx6sxscore/mx6sxscore.c
index 9b5e20f..a0fd398 100644
--- a/board/freescale/mx6sxscore/mx6sxscore.c
+++ b/board/freescale/mx6sxscore/mx6sxscore.c
@@ -23,6 +23,7 @@
 #include <i2c.h>
 #include <asm/imx-common/mxc_i2c.h>
 #endif
+#include <asm/arch/crm_regs.h>
 
 #ifdef CONFIG_FASTBOOT
 #include <fastboot.h>
@@ -44,24 +45,18 @@ DECLARE_GLOBAL_DATA_PTR;
         PAD_CTL_DSE_40ohm | PAD_CTL_HYS |			\
         PAD_CTL_ODE)
 
-#define LCD_PAD_CTRL    (PAD_CTL_HYS | PAD_CTL_PUS_100K_UP | PAD_CTL_PUE | \
-        PAD_CTL_PKE | PAD_CTL_SPEED_MED | PAD_CTL_DSE_40ohm)
-
-#define BUTTON_PAD_CTRL    (PAD_CTL_PKE | PAD_CTL_PUE | \
-        PAD_CTL_PUS_22K_UP | PAD_CTL_DSE_40ohm)
-
-#define WDOG_PAD_CTRL (PAD_CTL_PUE | PAD_CTL_PKE | PAD_CTL_SPEED_MED |	\
-        PAD_CTL_DSE_40ohm)
+#define SPI_PAD_CTRL (PAD_CTL_HYS |				\
+	PAD_CTL_SPEED_MED |		\
+	PAD_CTL_DSE_40ohm | PAD_CTL_SRE_FAST)
 
 #define GPMI_PAD_CTRL0 (PAD_CTL_PKE | PAD_CTL_PUE | PAD_CTL_PUS_100K_UP)
 #define GPMI_PAD_CTRL1 (PAD_CTL_DSE_40ohm | PAD_CTL_SPEED_MED | \
         PAD_CTL_SRE_FAST)
-#define GPIO_PAD_CTRL (PAD_CTL_PUS_100K_UP | PAD_CTL_PUE)
 #define GPMI_PAD_CTRL2 (GPMI_PAD_CTRL0 | GPMI_PAD_CTRL1)
 
 #ifdef CONFIG_SYS_I2C_MXC
 #define PC MUX_PAD_CTRL(I2C_PAD_CTRL)
-/* I2C4 for PMIC */
+/* I2C1 for PMIC */
 struct i2c_pads_info i2c_pad_info1 = {
 	.scl = {
 		.i2c_mode = MX6SX_PAD_GPIO1_IO00__I2C1_SCL | PC,
@@ -93,8 +88,7 @@ static void setup_iomux_uart(void)
     imx_iomux_v3_setup_multiple_pads(uart1_pads, ARRAY_SIZE(uart1_pads));
 }
 
-#if 0
-#ifdef CONFIG_SYS_USE_NAND
+/*#ifdef CONFIG_SYS_USE_NAND*/
 static iomux_v3_cfg_t gpmi_pads[] = {
     MX6SX_PAD_NAND_CLE__RAWNAND_CLE		| MUX_PAD_CTRL(GPMI_PAD_CTRL2),
     MX6SX_PAD_NAND_ALE__RAWNAND_ALE		| MUX_PAD_CTRL(GPMI_PAD_CTRL2),
@@ -145,8 +139,7 @@ static void setup_gpmi_nand(void)
     /* enable apbh clock gating */
     setbits_le32(&mxc_ccm->CCGR0, MXC_CCM_CCGR0_APBHDMA_MASK);
 }
-#endif // CONFIG_NAND_MXS
-#endif // IF 0
+/*#endif // CONFIG_NAND_MXS*/
 
 #ifdef CONFIG_FSL_ESDHC
 static iomux_v3_cfg_t const usdhc3_pads[] = {
@@ -210,8 +203,7 @@ int board_mmc_getcd(struct mmc *mmc)
             ret = 1; /* Assume uSDHC2 is always present */
             break;
         case USDHC3_BASE_ADDR:
-            /*ret = !gpio_get_value(USDHC3_CD_GPIO);*/
-            ret = 1;
+            ret = !gpio_get_value(USDHC3_CD_GPIO);
             break;
     }
 
@@ -282,9 +274,26 @@ void board_late_mmc_init(void)
 }
 #endif //CONFIG_FSL_ESDHC
 
+#ifdef CONFIG_SYS_USE_SPINOR
+iomux_v3_cfg_t const ecspi3_pads[] = {
+	MX6SX_PAD_SD4_DATA6__ECSPI3_MISO | MUX_PAD_CTRL(SPI_PAD_CTRL),
+	MX6SX_PAD_SD4_DATA5__ECSPI3_MOSI | MUX_PAD_CTRL(SPI_PAD_CTRL),
+	MX6SX_PAD_SD4_DATA4__ECSPI3_SCLK | MUX_PAD_CTRL(SPI_PAD_CTRL),
+	MX6SX_PAD_SD4_CLK__GPIO6_IO_12 | MUX_PAD_CTRL(NO_PAD_CTRL),
+};
+
+void setup_spinor(void)
+{
+	imx_iomux_v3_setup_multiple_pads(ecspi3_pads,
+					 ARRAY_SIZE(ecspi3_pads));
+	gpio_direction_output(IMX_GPIO_NR(6, 12), 0);
+}
+#endif // CONFIG_SYS_USE_SPINOR
+
 static iomux_v3_cfg_t const gpio_pads[] = {
     MX6SX_PAD_LCD1_DATA18__GPIO3_IO_19 | MUX_PAD_CTRL(NO_PAD_CTRL),
     MX6SX_PAD_LCD1_DATA19__GPIO3_IO_20 | MUX_PAD_CTRL(NO_PAD_CTRL),
+    MX6SX_PAD_LCD1_DATA09__GPIO3_IO_10 | MUX_PAD_CTRL(NO_PAD_CTRL),
 };
 
 static void setup_gpio(void)
@@ -292,6 +301,7 @@ static void setup_gpio(void)
     imx_iomux_v3_setup_multiple_pads(gpio_pads, ARRAY_SIZE(gpio_pads));
 
     gpio_direction_output(IMX_GPIO_NR(3, 20), 1);
+    gpio_direction_output(IMX_GPIO_NR(3, 10), 1);
 }
 
 #ifdef CONFIG_PFUZE100_PMIC_I2C
@@ -519,13 +529,13 @@ int board_init(void)
 	setup_i2c(0, CONFIG_SYS_I2C_SPEED, 0x7f, &i2c_pad_info1);
 #endif
 
-#if 0
-#ifdef CONFIG_SYS_USE_NAND
-    setup_gpmi_nand();
-#endif
+#ifdef CONFIG_SYS_USE_SPINOR
+	setup_spinor();
 #endif
 
+    setup_gpmi_nand();
     setup_gpio();
+    printf("Hello World from SPINOR\n");
     return 0;
 }
 
@@ -533,7 +543,7 @@ int board_init(void)
 static const struct boot_mode board_boot_modes[] = {
     /* 4 bit bus width */
     {"sd3", MAKE_CFGVAL(0x40, 0x30, 0x00, 0x00)},
-    {"nand", MAKE_CFGVAL(0x90, 0x00, 0x00, 0x00)},
+    {"spinor", MAKE_CFGVAL(0x30, 0x00, 0x00, 0x2A)},
     {NULL,	 0},
 };
 #endif
-- 
1.9.1


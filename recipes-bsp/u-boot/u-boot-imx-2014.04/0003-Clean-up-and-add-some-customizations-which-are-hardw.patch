From 6f51c3316a1922f23af64d822fafa49ff10e3ff7 Mon Sep 17 00:00:00 2001
From: Robert Lehmann <robert.lehmann@sitec-systems.de>
Date: Mon, 30 Nov 2015 15:12:06 +0100
Subject: [PATCH 2/3] Clean up and add some customizations which are hardware
 dependend

Remove some unused stuff like ethernet support and the ifdefs for
android. Although fix the handling of the PMIC.

The bootloader is loaded from the sd card (if the hardware configuration
supports it) and the u-boot is although able to load the kernel image and
the corresponding devicetree from sd3.
---
 include/configs/mx6sxscore.h | 119 ++++++++++---------------------------------
 1 file changed, 26 insertions(+), 93 deletions(-)

diff --git a/include/configs/mx6sxscore.h b/include/configs/mx6sxscore.h
index 87dfa66..093c1aa 100644
--- a/include/configs/mx6sxscore.h
+++ b/include/configs/mx6sxscore.h
@@ -47,11 +47,13 @@
 #define CONFIG_MXC_OCOTP
 #endif
 
+#define CONFIG_CMD_GPIO
+
 /* MMC Configs */
 #define CONFIG_FSL_ESDHC
 #define CONFIG_FSL_USDHC
 #define CONFIG_SYS_FSL_ESDHC_ADDR	0
-#define CONFIG_SYS_FSL_USDHC_NUM	2
+#define CONFIG_SYS_FSL_USDHC_NUM	1
 
 #define CONFIG_MMC
 #define CONFIG_CMD_MMC
@@ -69,29 +71,6 @@
 #undef CONFIG_CMD_EXPORTENV
 #undef CONFIG_CMD_IMPORTENV
 
-// #define CONFIG_CMD_PING
-// #define CONFIG_CMD_DHCP
-// #define CONFIG_CMD_MII
-// #define CONFIG_CMD_NET
-// #define CONFIG_FEC_MXC
-// #define CONFIG_RMII
-// #define CONFIG_FEC_ENET_DEV 0
-//
-// // Use 100 Mbit Ethernet device
-// #if (CONFIG_FEC_ENET_DEV == 0)
-// #define IMX_FEC_BASE			ENET_BASE_ADDR
-// #define CONFIG_FEC_MXC_PHYADDR          0x1
-// #elif (CONFIG_FEC_ENET_DEV == 1)
-// #define IMX_FEC_BASE			ENET2_BASE_ADDR
-// #define CONFIG_FEC_MXC_PHYADDR          0x2
-// #endif
-// #define CONFIG_FEC_XCV_TYPE             RGMII
-// #define CONFIG_ETHPRIME                 "FEC"
-//
-// #define CONFIG_PHYLIB
-// #define CONFIG_PHY_SMSC
-// #define CONFIG_FEC_DMA_MINALIGN		64
-
 /* allow to overwrite serial and ethaddr */
 #define CONFIG_ENV_OVERWRITE
 #define CONFIG_CONS_INDEX		1
@@ -103,9 +82,10 @@
 #define CONFIG_SYS_I2C_SPEED		100000
 
 /* PMIC */
-#define CONFIG_PFUZE100_PMIC_I2C
+//#define CONFIG_PFUZE100_PMIC_I2C
+#undef CONFIG_LDO_BYPASS_CHECK
 #ifdef CONFIG_PFUZE100_PMIC_I2C
-#define CONFIG_PMIC_I2C_BUS		3
+#define CONFIG_PMIC_I2C_BUS		0
 #define CONFIG_PMIC_I2C_SLAVE		0x8
 #endif
 
@@ -116,9 +96,10 @@
 #undef CONFIG_CMD_FPGA
 #undef CONFIG_CMD_IMLS
 
-#define CONFIG_BOOTDELAY		3
+#define CONFIG_BOOTDELAY		2
 
 #define CONFIG_LOADADDR			0x80800000
+//#define CONFIG_SYS_TEXT_BASE		0x86800000
 #define CONFIG_SYS_TEXT_BASE		0x87800000
 
 #define CONFIG_SYS_AUXCORE_BOOTDATA 0x78000000 /* Set to QSPI2 B flash at default */
@@ -127,6 +108,10 @@
 #define CONFIG_CMD_SETEXPR
 #endif
 
+#define CONFIG_SYS_MMC_ENV_DEV		0  /*USDHC3*/
+#define CONFIG_SYS_MMC_ENV_PART		2	/* user area */
+#define CONFIG_MMCROOT			"/dev/mmcblk2p2"  /* USDHC3 */
+
 #ifdef CONFIG_CMD_BOOTAUX
 #define UPDATE_M4_ENV \
     "m4image=m4_qspi.bin\0" \
@@ -174,68 +159,43 @@
     CONFIG_MFG_ENV_SETTINGS \
     UPDATE_M4_ENV \
     "script=boot.scr\0" \
-    "image=zImage\0" \
+    "image=uImage\0" \
     "console=ttymxc0\0" \
     "fdt_high=0xffffffff\0" \
     "initrd_high=0xffffffff\0" \
-    "fdt_file=imx6sx-sdb.dtb\0" \
+    "fdt_file=imx6sx-s2.dtb\0" \
     "fdt_addr=0x83000000\0" \
     "boot_fdt=try\0" \
-    "ip_dyn=yes\0" \
-    "mmcdev="__stringify(CONFIG_SYS_MMC_ENV_DEV)"\0" \
+	"mmcdev=0\0" \
     "mmcpart=1\0" \
     "mmcroot=" CONFIG_MMCROOT " rootwait rw\0" \
     "mmcautodetect=yes\0" \
     "mmcargs=setenv bootargs console=${console},${baudrate} " \
-        "root=${mmcroot}\0" \
+        "uart_from_osc root=${mmcroot}\0" \
     "loadbootscript=" \
-        "fatload mmc ${mmcdev}:${mmcpart} ${loadaddr} ${script};\0" \
+        "fatload mmc 0:${mmcpart} ${loadaddr} ${script};\0" \
     "bootscript=echo Running bootscript from mmc ...; " \
         "source\0" \
-    "loadimage=fatload mmc ${mmcdev}:${mmcpart} ${loadaddr} ${image}\0" \
-    "loadfdt=fatload mmc ${mmcdev}:${mmcpart} ${fdt_addr} ${fdt_file}\0" \
+    "loadimage=fatload mmc 0:${mmcpart} ${loadaddr} ${image}\0" \
+    "loadfdt=fatload mmc 0:${mmcpart} ${fdt_addr} ${fdt_file}\0" \
     "mmcboot=echo Booting from mmc ...; " \
     "run mmcargs; " \
     "if test ${boot_fdt} = yes || test ${boot_fdt} = try; then " \
         "if run loadfdt; then " \
-            "bootz ${loadaddr} - ${fdt_addr}; " \
+            "bootm ${loadaddr} - ${fdt_addr}; " \
         "else " \
             "if test ${boot_fdt} = try; then " \
-                "bootz; " \
+                "bootm; " \
             "else " \
                 "echo WARN: Cannot load the DT; " \
             "fi; " \
         "fi; " \
     "else " \
-        "bootz; " \
+        "bootm; " \
     "fi;\0" \
-    "netargs=setenv bootargs console=${console},${baudrate} " \
-    "root=/dev/nfs " \
-    "ip=dhcp nfsroot=${serverip}:${nfsroot},v3,tcp\0" \
-    "netboot=echo Booting from net ...; " \
-    "run netargs; " \
-    "if test ${ip_dyn} = yes; then " \
-        "setenv get_cmd dhcp; " \
-    "else " \
-        "setenv get_cmd tftp; " \
-    "fi; " \
-    "${get_cmd} ${image}; " \
-    "if test ${boot_fdt} = yes || test ${boot_fdt} = try; then " \
-        "if ${get_cmd} ${fdt_addr} ${fdt_file}; then " \
-            "bootz ${loadaddr} - ${fdt_addr}; " \
-        "else " \
-            "if test ${boot_fdt} = try; then " \
-                "bootz; " \
-            "else " \
-                "echo WARN: Cannot load the DT; " \
-            "fi; " \
-        "fi; " \
-    "else " \
-        "bootz; " \
-    "fi;\0"
 
 #define CONFIG_BOOTCOMMAND \
-    "mmc dev ${mmcdev};" \
+    "mmc dev 1;" \
     "if mmc rescan; then " \
         "if run loadbootscript; then " \
             "run bootscript; " \
@@ -292,35 +252,16 @@
 #ifdef CONFIG_SYS_AUXCORE_FASTUP
 /*#define CONFIG_MXC_RDC*/   /* Disable the RDC temporarily, will enable it in future */
 #define CONFIG_ENV_IS_IN_MMC  /* Must disable QSPI driver, because M4 run on QSPI */
-#elif defined CONFIG_SYS_BOOT_QSPI
-#define CONFIG_SYS_USE_QSPI
-#define CONFIG_ENV_IS_IN_SPI_FLASH
 #elif defined CONFIG_SYS_BOOT_NAND
 #define CONFIG_SYS_USE_NAND
 #define CONFIG_ENV_IS_IN_NAND
 #else
-#define CONFIG_SYS_USE_QSPI   /* Enable the QSPI flash at default */
+#define CONFIG_SYS_USE_NAND
 #define CONFIG_ENV_IS_IN_MMC
 #endif
 
-#ifdef CONFIG_SYS_USE_QSPI
-#define CONFIG_QSPI    /* enable the QUADSPI driver */
-#define CONFIG_QSPI_BASE			QSPI2_BASE_ADDR
-#define CONFIG_QSPI_MEMMAP_BASE		QSPI2_ARB_BASE_ADDR
-
-#define CONFIG_CMD_SF
-#define	CONFIG_SPI_FLASH
-#define	CONFIG_SPI_FLASH_BAR
-#define	CONFIG_SPI_FLASH_SPANSION
-#define CONFIG_SPI_FLASH_STMICRO
-#define	CONFIG_SF_DEFAULT_BUS		0
-#define	CONFIG_SF_DEFAULT_CS		0
-#define	CONFIG_SF_DEFAULT_SPEED		40000000
-#define	CONFIG_SF_DEFAULT_MODE		SPI_MODE_0
-#endif
-
 // NAND stuff
-#ifdef CONFIG_SYS_USE_NAND
+//#ifdef CONFIG_SYS_USE_NAND
 #define CONFIG_CMD_NAND
 #define CONFIG_CMD_NAND_TRIMFFS
 #define CONFIG_NAND_MXS
@@ -332,11 +273,7 @@
 #define CONFIG_APBH_DMA
 #define CONFIG_APBH_DMA_BURST
 #define CONFIG_APBH_DMA_BURST8
-#endif // CONFIG_SYS_USE_NAND
-
-#define CONFIG_SYS_MMC_ENV_DEV		1  /*USDHC3*/
-#define CONFIG_SYS_MMC_ENV_PART		2	/* user area */
-#define CONFIG_MMCROOT			"/dev/mmcblk2p2"  /* USDHC3 */
+//#endif // CONFIG_SYS_USE_NAND
 
 #if defined(CONFIG_ENV_IS_IN_MMC)
 #define CONFIG_ENV_OFFSET		(8 * SZ_64K)
@@ -375,8 +312,4 @@
 #define CONFIG_MXC_USB_FLAGS   0
 #define CONFIG_USB_MAX_CONTROLLER_COUNT 2
 
-#if defined(CONFIG_ANDROID_SUPPORT)
-#include "mx6sxsabresdandroid.h"
-#endif
-
 #endif				/* __CONFIG_H */
-- 
1.9.1


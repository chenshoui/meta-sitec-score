From 764dcff2c80724b1991cc5c7d54d072fdee481b0 Mon Sep 17 00:00:00 2001
From: Robert Lehmann <robert.lehmann@sitec-systems.de>
Date: Thu, 7 Jan 2016 17:01:08 +0100
Subject: [PATCH 08/11] S Core: Clean up U-Boot enviroment

Remove unecessary enviroment definitions. Refactor the initial U-Boot
enviroment for booting from SD (for development purpose) and to boot
U-Boot from SPI-NOR and kernel, rootfs from NAND. Add the necessary
informations for booting, like kernel parameters mtdparts and so on.

Ticket #871
---
 include/configs/mx6sxscore.h | 128 +++++++++++++++----------------------------
 1 file changed, 44 insertions(+), 84 deletions(-)

diff --git a/include/configs/mx6sxscore.h b/include/configs/mx6sxscore.h
index c6c07dd..932c534 100644
--- a/include/configs/mx6sxscore.h
+++ b/include/configs/mx6sxscore.h
@@ -1,5 +1,6 @@
 /*
  * Copyright (C) 2014 Freescale Semiconductor, Inc.
+ * Copyright (C) 2015, 2016 sitec systems GmbH
  *
  * Configuration settings for the Freescale i.MX6SX SABRESD board.
  *
@@ -53,7 +54,7 @@
 #define CONFIG_FSL_ESDHC
 #define CONFIG_FSL_USDHC
 #define CONFIG_SYS_FSL_ESDHC_ADDR	0
-#define CONFIG_SYS_FSL_USDHC_NUM	1
+#define CONFIG_SYS_FSL_USDHC_NUM	2
 
 #define CONFIG_MMC
 #define CONFIG_CMD_MMC
@@ -107,12 +108,10 @@
 #define CONFIG_CMD_SETEXPR
 #endif
 
-#define CONFIG_SYS_MMC_ENV_DEV		0  /*USDHC3*/
+#define CONFIG_SYS_MMC_ENV_DEV		1  /*USDHC3*/
 #define CONFIG_SYS_MMC_ENV_PART		2	/* user area */
 #define CONFIG_MMCROOT			"/dev/mmcblk2p2"  /* USDHC3 */
 
-#define CONFIG_SYS_USE_SPINOR
-
 #ifdef CONFIG_CMD_BOOTAUX
 #define UPDATE_M4_ENV \
     "m4image=m4_qspi.bin\0" \
@@ -143,74 +142,51 @@
     "initrd_high=0xffffffff\0" \
     "bootcmd_mfg=run mfgtool_args;bootz ${loadaddr} ${initrd_addr} ${fdt_addr};\0" \
 
-#if defined(CONFIG_SYS_BOOT_NAND)
-#define CONFIG_EXTRA_ENV_SETTINGS \
-    CONFIG_MFG_ENV_SETTINGS \
+#define CONFIG_BOOT_COMMON \
     "fdt_addr=0x83000000\0" \
-    "fdt_high=0xffffffff\0"	  \
+    "fdt_high=0xffffffff\0" \
     "console=ttymxc0\0" \
-    "bootargs=console=ttymxc0,115200 ubi.mtd=5 "  \
-    "root=ubi0:rootfs rootfstype=ubifs "		     \
-    "mtdparts=gpmi-nand:8m(boot),8m(kernel),8m(kernel_backup),2m(dtb),2m(dinfo),-(rootfs)\0"\
-    "bootcmd=nand read ${loadaddr} 0x200000 0x800000;"\
-    "nand read ${fdt_addr} 0x1200000 0x100000;"\
-"   bootz ${loadaddr} - ${fdt_addr}\0"
+    "image=uImage\0" \
+    "fdt_file=imx6sx-score.dtb\0" \
+    "mtdparts=gpmi-nand:8m(kernel),8m(kernel_backup),2m(dtb),2m(dinfo),-(rootfs)\0"
+
+#define CONFIG_BOOT_KERNEL_ROOTFS_NAND \
+    "rootnand=ubi0:rootfs rootfstype=ubifs\0"\
+    "nandkernel=nand read ${loadaddr} 0x0 0x800000\0" \
+    "nandfdt=nand read ${fdt_addr} 0x1000000 0x100000\0" \
+    "nandargs=setenv bootarts " \
+        "console=${console},${baudrate} "\
+        "uart_from_osc ubi.mtd=4 root=${rootnand} "\
+        "mtdparts=gpmi-nand:8m(kernel),8m(kernel_backup),2m(dtb),2m(dinfo),-(rootfs)\0" \
+    "bootnand=run nandargs && " \
+        "run nandfdt && " \
+        "run nandkernel && " \
+        "bootm ${loadaddr} - ${fdt_addr}\0"
+
+#define CONFIG_BOOT_KERNEL_ROOTFS_MMC \
+    "rootmmc=/dev/mmcblk2p2 rootwait rw\0" \
+    "mmckernel=fatload mmc 1:1 ${loadaddr} ${image}\0" \
+    "mmcfdt=fatload mmc 1:1 ${fdt_addr} ${fdt_file}\0" \
+    "mmcargs=setenv bootargs console=${console},${baudrate} uart_from_osc root=${rootmmc} mtdparts=${mtdparts}\0" \
+    "bootmmc=run mmcargs && " \
+        "run mmckernel && " \
+        "run mmcfdt && " \
+        "bootm ${loadaddr} - ${fdt_addr}\0"
+
+#if defined(CONFIG_SYS_BOOT_SPINOR)
+#define CONFIG_EXTRA_ENV_SETTINGS \
+    CONFIG_MFG_ENV_SETTINGS \
+    CONFIG_BOOT_COMMON \
+    CONFIG_BOOT_KERNEL_ROOTFS_NAND \
+    CONFIG_BOOT_KERNEL_ROOTFS_MMC \
+    "bootcmd=run bootnand\0"
 #else
 #define CONFIG_EXTRA_ENV_SETTINGS \
     CONFIG_MFG_ENV_SETTINGS \
-    UPDATE_M4_ENV \
-    "script=boot.scr\0" \
-    "image=uImage\0" \
-    "console=ttymxc0\0" \
-    "fdt_high=0xffffffff\0" \
-    "initrd_high=0xffffffff\0" \
-    "fdt_file=imx6sx-score.dtb\0" \
-    "fdt_addr=0x83000000\0" \
-    "boot_fdt=try\0" \
-	"mmcdev=0\0" \
-    "mmcpart=1\0" \
-    "mmcroot=" CONFIG_MMCROOT " rootwait rw\0" \
-    "mmcautodetect=yes\0" \
-    "readkernel=nand read ${loadaddr} 0x800000 0x800000\0" \
-    "readfdt=nand read ${fdt_addr} 0x1800000 0x100000\0" \
-    "bootnand=run readfdt; run readkernel; run mmcargs; bootm ${loadaddr} - ${fdt_addr}\0" \
-    "mmcargs=setenv bootargs console=${console},${baudrate} " \
-        "uart_from_osc ubi.mtd=5 root=${mmcroot} mtdparts=gpmi-nand:8m(boot),8m(kernel),8m(kernel_backup),2m(dtb),2m(dinfo),-(rootfs)\0" \
-    "loadbootscript=" \
-        "fatload mmc 0:${mmcpart} ${loadaddr} ${script};\0" \
-    "bootscript=echo Running bootscript from mmc ...; " \
-        "source\0" \
-    "loadimage=fatload mmc 0:${mmcpart} ${loadaddr} ${image}\0" \
-    "loadfdt=fatload mmc 0:${mmcpart} ${fdt_addr} ${fdt_file}\0" \
-    "nandroot=ubi0:rootfs rootfstype=ubifs\0" \
-    "mmcboot=echo Booting from mmc ...; " \
-    "run mmcargs; " \
-    "if test ${boot_fdt} = yes || test ${boot_fdt} = try; then " \
-        "if run loadfdt; then " \
-            "bootm ${loadaddr} - ${fdt_addr}; " \
-        "else " \
-            "if test ${boot_fdt} = try; then " \
-                "bootm; " \
-            "else " \
-                "echo WARN: Cannot load the DT; " \
-            "fi; " \
-        "fi; " \
-    "else " \
-        "bootm; " \
-    "fi;\0" \
-
-#define CONFIG_BOOTCOMMAND \
-    "mmc dev 1;" \
-    "if mmc rescan; then " \
-        "if run loadbootscript; then " \
-            "run bootscript; " \
-        "else " \
-            "if run loadimage; then " \
-                "run mmcboot; " \
-            "else run netboot; " \
-            "fi; " \
-        "fi; " \
-    "else run netboot; fi"
+    CONFIG_BOOT_COMMON \
+    CONFIG_BOOT_KERNEL_ROOTFS_MMC \
+    CONFIG_BOOT_KERNEL_ROOTFS_NAND \
+    "bootcmd=run bootmmc\0"
 #endif
 
 /* Miscellaneous configurable options */
@@ -254,21 +230,13 @@
 
 #define CONFIG_ENV_SIZE			SZ_8K
 
-#ifdef CONFIG_SYS_AUXCORE_FASTUP
-/*#define CONFIG_MXC_RDC*/   /* Disable the RDC temporarily, will enable it in future */
-#define CONFIG_ENV_IS_IN_MMC  /* Must disable QSPI driver, because M4 run on QSPI */
-#elif defined CONFIG_SYS_BOOT_NAND
-#define CONFIG_SYS_USE_NAND
-#define CONFIG_ENV_IS_IN_NAND
-#elif defined CONFIG_SYS_BOOT_SPINOR
+#if defined CONFIG_SYS_BOOT_SPINOR
 #define CONFIG_SYS_USE_SPINOR
 #define CONFIG_ENV_IS_IN_SPI_FLASH
 #else
-#define CONFIG_SYS_USE_NAND
 #define CONFIG_ENV_IS_IN_MMC
 #endif
 
-#ifdef CONFIG_SYS_USE_SPINOR
 #define CONFIG_CMD_SF
 #define CONFIG_SPI_FLASH
 #define CONFIG_SPI_FLASH_WINBOND
@@ -278,10 +246,8 @@
 #define CONFIG_SF_DEFAULT_SPEED 20000000
 #define CONFIG_SF_DEFAULT_MODE (SPI_MODE_0)
 #define CONFIG_SF_DEFAULT_CS   (2|(IMX_GPIO_NR(6, 12)<<8))
-#endif
 
 // NAND stuff
-//#ifdef CONFIG_SYS_USE_NAND
 #define CONFIG_CMD_NAND
 #define CONFIG_CMD_NAND_TRIMFFS
 #define CONFIG_CMD_MTDPARTS
@@ -295,7 +261,6 @@
 #define CONFIG_APBH_DMA
 #define CONFIG_APBH_DMA_BURST
 #define CONFIG_APBH_DMA_BURST8
-//#endif // CONFIG_SYS_USE_NAND
 
 #if defined(CONFIG_ENV_IS_IN_MMC)
 #define CONFIG_ENV_OFFSET		(8 * SZ_64K)
@@ -306,11 +271,6 @@
 #define CONFIG_ENV_SPI_CS		CONFIG_SF_DEFAULT_CS
 #define CONFIG_ENV_SPI_MODE		CONFIG_SF_DEFAULT_MODE
 #define CONFIG_ENV_SPI_MAX_HZ		CONFIG_SF_DEFAULT_SPEED
-#elif defined(CONFIG_ENV_IS_IN_NAND)
-#undef CONFIG_ENV_SIZE
-#define CONFIG_ENV_OFFSET		(8 << 20)
-#define CONFIG_ENV_SECT_SIZE		(128 << 10)
-#define CONFIG_ENV_SIZE			CONFIG_ENV_SECT_SIZE
 #endif
 
 
-- 
1.9.1


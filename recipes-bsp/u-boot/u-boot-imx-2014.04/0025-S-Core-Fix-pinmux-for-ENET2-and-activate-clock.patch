From 6a25fa1a8427ff0200d8403cab3fc8b26a12dfb1 Mon Sep 17 00:00:00 2001
From: Robert Lehmann <robert.lehmann@sitec-systems.de>
Date: Fri, 3 Jun 2016 15:33:20 +0200
Subject: [PATCH 25/26] S Core: Fix pinmux for ENET2 and activate clock

Fix the pin muxing of the ENET2 interface. Now the driver uses the
correct mdio interface for the communication to the phy.

Now the reference clock for the enet2 interface will be generated by the
core itself. The clock is setted to a rate of 50 MHz.

Ticket #931
---
 board/freescale/mx6sxscore/mx6sxscore.c | 32 +++++++++++++++-----------------
 1 file changed, 15 insertions(+), 17 deletions(-)

diff --git a/board/freescale/mx6sxscore/mx6sxscore.c b/board/freescale/mx6sxscore/mx6sxscore.c
index 64a9405..3a2c82e 100644
--- a/board/freescale/mx6sxscore/mx6sxscore.c
+++ b/board/freescale/mx6sxscore/mx6sxscore.c
@@ -159,15 +159,15 @@ static void setup_gpmi_nand(void)
 
 #ifdef CONFIG_FEC_MXC
 static iomux_v3_cfg_t const fec_pads[] = {
-    MX6SX_PAD_ENET1_MDC__ENET1_MDC | MUX_PAD_CTRL(ENET_PAD_CTRL),
-    MX6SX_PAD_ENET1_MDIO__ENET1_MDIO | MUX_PAD_CTRL(ENET_PAD_CTRL),
-    MX6SX_PAD_RGMII2_RD0__ENET2_RX_DATA_0 | MUX_PAD_CTRL(ENET_RX_PAD_CTRL),
+    MX6SX_PAD_ENET1_MDC__ENET2_MDC | MUX_PAD_CTRL(ENET_PAD_CTRL),
+    MX6SX_PAD_ENET1_MDIO__ENET2_MDIO | MUX_PAD_CTRL(ENET_PAD_CTRL),
+	MX6SX_PAD_RGMII2_RD0__ENET2_RX_DATA_0 | MUX_PAD_CTRL(ENET_RX_PAD_CTRL),
     MX6SX_PAD_RGMII2_RD1__ENET2_RX_DATA_1 | MUX_PAD_CTRL(ENET_RX_PAD_CTRL),
     MX6SX_PAD_RGMII2_TD0__ENET2_TX_DATA_0 | MUX_PAD_CTRL(ENET_PAD_CTRL),
     MX6SX_PAD_RGMII2_TD1__ENET2_TX_DATA_1 | MUX_PAD_CTRL(ENET_PAD_CTRL),
     MX6SX_PAD_RGMII2_TX_CTL__ENET2_TX_EN | MUX_PAD_CTRL(ENET_PAD_CTRL),
     MX6SX_PAD_RGMII2_RX_CTL__ENET2_RX_EN | MUX_PAD_CTRL(ENET_PAD_CTRL),
-    MX6SX_PAD_ENET2_CRS__ENET2_CRS | MUX_PAD_CTRL(ENET_PAD_CTRL),
+	MX6SX_PAD_RGMII2_RXC__ENET2_RX_ER | MUX_PAD_CTRL(ENET_PAD_CTRL),
     MX6SX_PAD_ENET2_TX_CLK__ENET2_REF_CLK2 | MUX_PAD_CTRL(ENET_CLK_PAD_CTRL),
 };
 
@@ -190,30 +190,29 @@ int board_eth_init(bd_t *bis)
 
 static int setup_fec(void)
 {
+	int ret = 0;
+
 	struct iomuxc_gpr_base_regs *const iomuxc_gpr_regs
 		= (struct iomuxc_gpr_base_regs *) IOMUXC_GPR_BASE_ADDR;
 
     /* Use external OSC for ENET2 REF_CLK, set gpr1[14], clear gpr1[18]*/
-    clrsetbits_le32(&iomuxc_gpr_regs->gpr[1], 0, IOMUX_GPR1_FEC2_MASK);
+    clrsetbits_le32(&iomuxc_gpr_regs->gpr[1], IOMUX_GPR1_FEC2_MASK, 1 << 18);
 
     imx_iomux_v3_setup_multiple_pads(phy_ctrl_pads, ARRAY_SIZE(phy_ctrl_pads));
+    gpio_set_value(IMX_GPIO_NR(4, 26), 0);
 
-    gpio_direction_output(IMX_GPIO_NR(4, 26), 0);
-    udelay(300);
-    gpio_set_value(IMX_GPIO_NR(4, 26), 1);
+	ret = enable_fec_anatop_clock(1, ENET_50MHz);
+	if (ret)
+		return ret;
 
+	enable_enet_clock();
     return 0;
 }
 
-int board_phy_config(struct phy_device *phydev)
+int board_phy_config(struct phy_device *dev)
 {
-    int ret;
-    ret = phy_read(phydev, MDIO_DEVAD_NONE, 0x1);
-
-    printf("DBG: readed Basic State 0x%x\n", ret);
-
-	if (phydev->drv->config)
-		phydev->drv->config(phydev);
+	if (dev->drv->config)
+		dev->drv->config(dev);
 
     return 0;
 }
@@ -658,7 +657,6 @@ int board_init(void)
 #else
     printf("Hello World from another device\n");
 #endif
-
     setup_gpmi_nand();
     setup_gpio();
     return 0;
-- 
1.9.1


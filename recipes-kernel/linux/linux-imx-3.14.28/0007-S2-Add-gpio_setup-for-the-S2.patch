From 6063c1ba90c2c210c6fd209969e70deb7343b4f6 Mon Sep 17 00:00:00 2001
From: Robert Lehmann <robert.lehmann@sitec-systems.de>
Date: Thu, 17 Dec 2015 15:26:21 +0100
Subject: [PATCH 7/7] S2: Add gpio_setup for the S2

Add an setup for several GPIOs on the S2 at the init of the machine. The
gpios will be exported to sysfs and get a direction and a defined value.
This will be done during the machine init process and only then of the
device tree of the s2 is detected

Ticket #872
---
 arch/arm/mach-imx/mach-imx6sx.c | 43 +++++++++++++++++++++++++++++++++++++++++
 1 file changed, 43 insertions(+)

diff --git a/arch/arm/mach-imx/mach-imx6sx.c b/arch/arm/mach-imx/mach-imx6sx.c
index 7f5188f..1e39171 100755
--- a/arch/arm/mach-imx/mach-imx6sx.c
+++ b/arch/arm/mach-imx/mach-imx6sx.c
@@ -24,6 +24,7 @@
 
 #include "common.h"
 #include "cpuidle.h"
+#include "hardware.h"
 
 static struct fec_platform_data fec_pdata[2];
 static struct flexcan_platform_data flexcan_pdata[2];
@@ -309,6 +310,45 @@ static struct platform_device imx6sx_cpufreq_pdev = {
 	.name = "imx6q-cpufreq",
 };
 
+#define GSM_IGN IMX_GPIO_NR(3, 15)
+#define GSM_RES IMX_GPIO_NR(1, 9)
+#define EN_5P IMX_GPIO_NR(2, 12)
+#define CAN_STB IMX_GPIO_NR(1, 2)
+#define CAN_TERM IMX_GPIO_NR(1, 8)
+#define GNSS_RES IMX_GPIO_NR(3, 1)
+#define GNSS_PWR_E IMX_GPIO_NR(3, 9)
+#define GNSS_ANT_SEL IMX_GPIO_NR(3, 27)
+#define GSM_ANT_SEL IMX_GPIO_NR(3, 25)
+
+static void gpio_request_export(int gpio_num, int def_mode, char *label)
+{
+	int err;
+
+	err = gpio_request_one(gpio_num, def_mode, label);
+	if (err) {
+		pr_warn("Cannot request Gpio %i", gpio_num);
+	} else {
+		err = gpio_export(gpio_num, true);
+		if (err)
+			pr_warn("Cannot export Gpio %i", gpio_num);
+	}
+	return;
+}
+
+static void imx6sx_gpio_setup(void)
+{
+    gpio_request_export(GSM_IGN, GPIOF_OUT_INIT_LOW, "gsm_ign");
+    gpio_request_export(GSM_RES, GPIOF_OUT_INIT_HIGH, "gsm_res");
+    gpio_request_export(EN_5P, GPIOF_OUT_INIT_LOW, "5p_en");
+    gpio_request_export(CAN_STB, GPIOF_OUT_INIT_HIGH, "can_stb");
+    gpio_request_export(CAN_TERM, GPIOF_OUT_INIT_LOW, "can_term");
+    gpio_request_export(GNSS_RES, GPIOF_OUT_INIT_LOW, "gnss_res");
+    gpio_request_export(GNSS_PWR_E, GPIOF_OUT_INIT_HIGH, "gnss_pwr_e");
+    gpio_request_export(GNSS_ANT_SEL, GPIOF_OUT_INIT_HIGH, "gnss_ant_sel");
+    gpio_request_export(GSM_ANT_SEL, GPIOF_OUT_INIT_HIGH, "gsm_ant_sel");
+    return;
+}
+
 static void __init imx6sx_init_late(void)
 {
 	if (IS_ENABLED(CONFIG_ARM_IMX6Q_CPUFREQ)) {
@@ -320,6 +360,9 @@ static void __init imx6sx_init_late(void)
 		of_machine_is_compatible("fsl,imx6sx-sabreauto"))
 		imx6sx_arm2_flexcan_fixup();
 
+    if (of_machine_is_compatible("fsl,imx6sx-s2"))
+        imx6sx_gpio_setup();
+
 	imx6sx_cpuidle_init();
 }
 
-- 
1.9.1

